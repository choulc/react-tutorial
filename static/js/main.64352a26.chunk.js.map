{"version":3,"sources":["components/Footer.jsx","components/Header.jsx","components/KeyVisual.jsx","reducers/pagesSlice.js","reducers/plansSlice.js","components/Pagination.jsx","components/Plans.jsx","reducers/searchSlice.js","components/SearchBar.jsx","pages/MasterPage.jsx","components/DetailHeader.jsx","components/DetailPlan.jsx","pages/DetailPage.jsx","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["Footer","Fragment","className","Header","to","KeyVisual","pagesSlice","createSlice","name","initialState","currentPage","maxPage","showPerPage","reducers","previousPage","state","console","log","nextPage","updateMaxPage","action","payload","setCurrentPage","actions","fetchPlans","createAsyncThunk","a","axios","get","result","data","plansSlice","planItems","filteredPlans","planLookupTable","status","error","updateFilteredPlans","concat","extraReducers","pending","fulfilled","tempLookupTable","forEach","plan","id","rejected","message","selectFilteredPlans","plans","Pagination","dispatch","useDispatch","pages","useSelector","useEffect","Math","ceil","length","onClick","window","scrollTo","behavior","top","Plans","slice","map","index","badge","width","height","src","youtubeLink","frameBorder","allow","allowFullScreen","title","grade","subject","fetchEdu","fetchSubjects","fetchCounties","searchSlice","eduStatus","eduError","subjectsStatus","subjectsError","countiesStatus","countyError","eduLevel","subjects","counties","selectedEduLevel","selectedSubjects","selectedSubject","selectedCounty","selectedKeyword","searchResult","updateSelectedEduLevel","updateSelectedSubjects","updateSelectedSubject","updateSelectedCounty","updateSelectedKeyword","updateSearchResult","SearchBar","search","useState","showEduLevel","setShowEduLevel","showSubjects","setShowSubjects","showCounties","setShowCounties","showSearchResult","setShowSearchResult","eduLevelDisplay","subjectDisplay","countyDisplay","onSelectEdu","edu","onSelectSubject","onSelectCounty","county","eduButtons","subjectButtons","style","textAlign","countyButtons","resultInfo","type","placeholder","value","onChange","e","target","tempPlans","filter","includes","city","Object","values","join","display","MasterPage","DetailHeader","DetailPlan","props","year","awardName","teacher","school","dangerouslySetInnerHTML","__html","summary","DetailPage","planId","useParams","App","planStatus","basename","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","pagesReducer","plansReducer","searchReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.64352a26.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Footer() {\n    return (\n        <React.Fragment>\n            <footer className=\"clearfix\">\n                <p>為獲得最佳瀏覽體驗，建議使用Edge、Chrome、Firefox，如使用IE部份網頁可能會有破圖、跑版或功能無法正確顯示及使用。</p>\n                <p>Copyright © 2021 Hanlin 翰林出版事業股份有限公司</p>\n            </footer>\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Header() {\n    return (\n        <React.Fragment>\n            <header>\n                <Link to=\"/\">\n                    <div className=\"logo\">\n                        微笑台灣創意教案\n                    {/* <a href=\"index.html\">微笑台灣創意教案</a> */}\n                    </div>\n                </Link>\n            </header>\n        </React.Fragment>\n    )\n}","import React from 'react';\n\nexport default function KeyVisual() {\n    return (\n        <React.Fragment>\n            <section className=\"kv\">\n                <div className=\"title\">微笑台灣創意教案</div>\n            </section>\n        </React.Fragment>\n    )\n}","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialPage = {\n    currentPage: 1,\n    maxPage: 1,\n    showPerPage: 9,\n}\n\nexport const pagesSlice = createSlice({\n    name: 'pages',\n    initialState: initialPage,\n    reducers: {\n        previousPage: (state) => {\n            if (state.currentPage > 1) {\n                state.currentPage -= 1;\n            }\n            console.log('click previous page')\n        },\n        nextPage: (state) => {\n            if (state.maxPage > state.currentPage) {\n                state.currentPage += 1;\n            }\n            console.log('click next page')\n        },\n        updateMaxPage: (state, action) => {\n            state.maxPage = action.payload\n        },\n        setCurrentPage: (state, action) => {\n            state.currentPage = action.payload\n        }\n    }\n});\n\nexport const { nextPage, previousPage, updateMaxPage, setCurrentPage } = pagesSlice.actions;\n\nexport default pagesSlice.reducer;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst initialPlans = {\n    planItems: [],\n    filteredPlans: [],\n    planLookupTable: {},\n    status: 'idle',\n    error: null,\n}\n\nexport const fetchPlans = createAsyncThunk('plans/fetchPlans', async () => {\n    const result = await axios.get('lesson-plans.json');\n    return result.data;\n})\n\nconst plansSlice = createSlice({\n    name: 'plans',\n    initialState: initialPlans,\n    reducers: {\n        updateFilteredPlans: (state, action) => {\n            state.filteredPlans = [].concat(action.payload);\n        },\n    },\n    extraReducers: {\n        [fetchPlans.pending]: (state, action) => {\n            state.status = 'loading'\n        },\n        [fetchPlans.fulfilled]: (state, action) => {\n            state.status = 'succeeded'\n            // Add any fetched posts to the array\n            state.planItems = state.planItems.concat(action.payload)\n            state.filteredPlans = state.filteredPlans.concat(action.payload)\n\n            const tempLookupTable = {};\n            action.payload.forEach(plan => { tempLookupTable[plan.id] = plan });\n            state.planLookupTable = tempLookupTable;\n        },\n        [fetchPlans.rejected]: (state, action) => {\n            state.status = 'failed'\n            state.error = action.error.message\n        },\n    }\n});\n\nexport const { updateFilteredPlans } = plansSlice.actions;\nexport const selectFilteredPlans = state => state.plans.filteredPlans\n\nexport default plansSlice.reducer","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { previousPage, nextPage, updateMaxPage } from '../reducers/pagesSlice'\nimport { selectFilteredPlans } from '../reducers/plansSlice'\n\nexport default function Pagination() {\n\n    const dispatch = useDispatch();\n\n    const pages = useSelector(state => state.pages);\n    const filteredPlans = useSelector(selectFilteredPlans)\n\n    useEffect(() => {\n        Math.ceil(filteredPlans.length / pages.showPerPage) === 0 ? dispatch(updateMaxPage(1)) : dispatch(updateMaxPage(Math.ceil(filteredPlans.length / pages.showPerPage)))\n    }, [filteredPlans, pages.showPerPage, dispatch])\n\n    const onPreviousCkicked = () => {\n        dispatch(previousPage());\n        window.scrollTo({ behavior: 'smooth', top: 600 });\n    }\n\n    const onNextClicked = () => {\n        dispatch(nextPage());\n        window.scrollTo({ behavior: 'smooth', top: 600 });\n    }\n\n\n    return (\n        <React.Fragment>\n            <section className=\"clearfix Pagination\">\n                <button className=\"Previous\" onClick={onPreviousCkicked} ></button>\n                <span>{pages.currentPage}</span>/<span>{pages.maxPage}</span>\n                <button className=\"Next\" onClick={onNextClicked} ></button>\n            </section>\n        </React.Fragment >\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredPlans } from '../reducers/plansSlice';\n\nexport default function Plans() {\n\n    const filteredPlans = useSelector(selectFilteredPlans);\n    const currentPage = useSelector(state => state.pages.currentPage)\n    const showPerPage = useSelector(state => state.pages.showPerPage)\n\n    return (\n        <React.Fragment>\n            <section>\n                <div className=\"ytdwrap\">\n                    {filteredPlans.slice((currentPage - 1) * showPerPage, currentPage * showPerPage).map((plan, index) => (\n                        <div className=\"clearfix info_item\" key={plan.youtubeLink}>\n                            <Link to={`plan/${plan.id}`} onClick={() => { window.scrollTo(0, 0) }}>\n                                {/* <a href=\"casestudies.html\"> */}\n                                <div className={`medal icon_${plan.badge}`}></div>\n                                <div className=\"video-shadow\">\n                                    <iframe\n                                        width=\"400\"\n                                        height=\"200\"\n                                        src={`https://www.youtube.com/embed/${plan.youtubeLink}`}\n                                        frameBorder=\"0\"\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                        allowFullScreen\n                                        title={plan.youtubeLink}\n                                    />\n                                </div>\n                                <div className=\"textContent\">\n                                    <h4>適合階段：{plan.grade}</h4>\n                                    <h3>{plan.name}</h3>\n                                    <p>科目：{plan.subject}</p>\n                                </div>\n                                {/* </a> */}\n                            </Link>\n                        </div>\n                    ))}\n\n                </div>\n            </section>\n        </React.Fragment>\n    )\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nconst initalSearch = {\n    eduStatus: 'idle',\n    eduError: null,\n    subjectsStatus: 'idle',\n    subjectsError: null,\n    countiesStatus: 'idle',\n    countyError: null,\n    eduLevel: [],\n    subjects: {},\n    counties: [],\n    selectedEduLevel: '',\n    selectedSubjects: [],\n    selectedSubject: '',\n    selectedCounty: '',\n    selectedKeyword: '',\n    searchResult: { selectedEduLevel: '', selectedSubject: '', selectedCounty: '', selectedKeyword: '' },\n}\n\nexport const fetchEdu = createAsyncThunk('search/fetchEdu', async () => {\n    const result = await axios.get('education-levels.json');\n    return result.data;\n})\n\nexport const fetchSubjects = createAsyncThunk('search/fetchSubjects', async () => {\n    const result = await axios.get('subjects.json');\n    return result.data;\n})\n\nexport const fetchCounties = createAsyncThunk('search/fetchCounties', async () => {\n    const result = await axios.get('counties.json');\n    return result.data;\n})\n\nconst searchSlice = createSlice({\n    name: 'search',\n    initialState: initalSearch,\n    reducers: {\n        updateSelectedEduLevel: (state, action) => {\n            state.selectedEduLevel = action.payload\n        },\n        updateSelectedSubjects: (state, action) => {\n            state.selectedSubjects = action.payload;\n        },\n        updateSelectedSubject: (state, action) => {\n            state.selectedSubject = action.payload;\n        },\n        updateSelectedCounty: (state, action) => {\n            state.selectedCounty = action.payload;\n        },\n        updateSelectedKeyword: (state, action) => {\n            state.selectedKeyword = action.payload;\n        },\n        updateSearchResult: (state, action) => {\n            state.searchResult = action.payload;\n        }\n    },\n    extraReducers: {\n        [fetchEdu.pending]: state => {\n            state.eduStatus = 'loading'\n        },\n        [fetchEdu.fulfilled]: (state, action) => {\n            state.eduStatus = 'succeeded';\n            state.eduLevel = action.payload\n        },\n        [fetchEdu.rejected]: (state, action) => {\n            state.eduStatus = 'failed';\n            state.error = action.error.message\n        },\n        [fetchSubjects.pending]: state => {\n            state.subjectsStatus = 'loading'\n        },\n        [fetchSubjects.fulfilled]: (state, action) => {\n            state.subjectsStatus = 'succeeded';\n            state.subjects = action.payload;\n        },\n        [fetchSubjects.rejected]: (state, action) => {\n            state.subjectsStatus = 'failed';\n            state.subjectsError = action.error.message;\n        },\n        [fetchCounties.pending]: state => {\n            state.countiesStatus = 'loading';\n        },\n        [fetchCounties.fulfilled]: (state, action) => {\n            state.countiesStatus = 'succeeded';\n            state.counties = action.payload;\n        },\n        [fetchCounties.rejected]: (state, action) => {\n            state.countiesStatus = 'failed';\n            state.countyError = action.error.message;\n        }\n    }\n})\n\nexport const {\n    updateSelectedEduLevel,\n    updateSelectedSubjects,\n    updateSelectedSubject,\n    updateSelectedCounty,\n    updateSelectedKeyword,\n    updateSearchResult,\n} = searchSlice.actions;\n\nexport default searchSlice.reducer;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectFilteredPlans, updateFilteredPlans } from '../reducers/plansSlice';\nimport { setCurrentPage } from '../reducers/pagesSlice';\nimport {\n    updateSelectedEduLevel,\n    updateSelectedSubjects,\n    updateSelectedSubject,\n    updateSelectedCounty,\n    updateSelectedKeyword,\n    updateSearchResult,\n} from '../reducers/searchSlice'\n\nexport default function SearchBar() {\n\n    const dispatch = useDispatch();\n\n    const planItems = useSelector(state => state.plans.planItems);\n    const filteredPlans = useSelector(selectFilteredPlans);\n    const search = useSelector(state => state.search)\n    const selectedEduLevel = useSelector(state => state.search.selectedEduLevel);\n    const selectedSubjects = useSelector(state => state.search.selectedSubjects);\n    const selectedSubject = useSelector(state => state.search.selectedSubject);\n    const selectedCounty = useSelector(state => state.search.selectedCounty);\n    const searchResult = useSelector(state => state.search.searchResult)\n\n    const [showEduLevel, setShowEduLevel] = useState(false);\n    const [showSubjects, setShowSubjects] = useState(false);\n    const [showCounties, setShowCounties] = useState(false);\n    const [showSearchResult, setShowSearchResult] = useState(false);\n\n    const onEduButtonLevelClicked = () => {\n        setShowEduLevel(!showEduLevel);\n        setShowSubjects(false);\n        setShowCounties(false);\n        setShowSearchResult(false);\n        dispatch(updateSelectedSubjects(''));\n        dispatch(updateSelectedCounty(''));\n    }\n\n    const onSubButtonClicked = () => {\n        setShowEduLevel(false);\n        setShowSubjects(!showSubjects);\n        setShowCounties(false);\n        setShowSearchResult(false);\n    }\n\n    const onCountyButtonClicked = () => {\n        setShowEduLevel(false);\n        setShowSubjects(false);\n        setShowCounties(!showCounties);\n        setShowSearchResult(false);\n    }\n\n    let eduLevelDisplay = !!selectedEduLevel ? selectedEduLevel : '學習階段';\n    let subjectDisplay = !!selectedSubject ? selectedSubject : '學習科目';\n    let countyDisplay = !!selectedCounty ? selectedCounty : '學習地區';\n\n    const onSelectEdu = (edu) => {\n        dispatch(updateSelectedEduLevel(edu));\n        setShowEduLevel(false);\n        dispatch(updateSelectedSubjects(edu === '高中職科目' ? search.subjects['高中職'] : (edu === '國中科目' ? search.subjects['國中'] : (edu === '不分學段' ? [] : search.subjects[edu]))));\n    }\n\n    const onSelectSubject = (subject) => {\n        dispatch(updateSelectedSubject(subject));\n        setShowSubjects(false);\n    }\n\n    const onSelectCounty = (county) => {\n        dispatch(updateSelectedCounty(county));\n        setShowCounties(false);\n    }\n\n    let eduButtons = (\n        <React.Fragment>\n            <button onClick={() => onSelectEdu('不分學段')}>不分學段</button>\n            {search.eduLevel.map((edu, index) => (<button key={index} onClick={() => onSelectEdu(edu)}>{edu}</button>))}\n        </React.Fragment>\n    )\n\n    let subjectButtons = (\n        <React.Fragment>\n            {selectedEduLevel === '不分學段' ? <div style={{ textAlign: 'center' }}>預設選擇全部科目。</div> : null}\n            {(!!selectedEduLevel && selectedEduLevel !== '不分學段') ? <button onClick={() => onSelectSubject('全部學科')}>全部學科</button> : null}\n            {!!selectedEduLevel ? selectedSubjects.map((subject, index) => (<button key={index} onClick={() => onSelectSubject(subject)}>{subject}</button>)) :\n                ((!showEduLevel && !showCounties && !showSearchResult) ? <div style={{ textAlign: 'center' }}>請先選擇學習階段。</div> : null)}\n        </React.Fragment>\n    )\n\n    let countyButtons = (\n        <React.Fragment>\n            <button onClick={() => onSelectCounty('全台')}>全台</button>\n            {search.counties.map((county, index) => (<button key={index} onClick={() => onSelectCounty(county)}>{county}</button>))}\n        </React.Fragment>\n    )\n\n\n    const onSearchClick = () => {\n        const tempPlans = [...planItems];\n        dispatch(updateFilteredPlans(tempPlans\n            .filter(plan => plan.grade.includes(selectedEduLevel === '高中職科目' ? '高中職'\n                : (selectedEduLevel === '國中科目' ? '國中' : (selectedEduLevel === '不分學段' ? '' : selectedEduLevel))))\n            .filter(plan => plan.subject.includes((selectedSubject === '全部學科') ? '' : selectedSubject))\n            .filter(plan => plan.city.includes(selectedCounty === '離島' ? '連江縣' : selectedCounty)\n                || plan.city.includes(selectedCounty === '離島' ? '金門縣' : selectedCounty)\n                || plan.city.includes(selectedCounty === '離島' ? '澎湖縣' : selectedCounty)\n                || plan.city.includes(selectedCounty === '臺中市' ? '台中市' : selectedCounty)\n                || plan.city.includes(selectedCounty === '全台' ? '' : selectedCounty))\n            .filter(plan => Object.values(plan).join('').includes(search.selectedKeyword))\n        ));\n        dispatch(setCurrentPage(1));\n        setShowEduLevel(false);\n        setShowSubjects(false);\n        setShowCounties(false);\n        setShowSearchResult(true);\n        dispatch(updateSearchResult({ selectedEduLevel: selectedEduLevel, selectedSubject: selectedSubject, selectedCounty: selectedCounty, selectedKeyword: search.selectedKeyword }));\n    }\n\n    let resultInfo = (\n        <React.Fragment>\n            {(!!filteredPlans.length ?\n                <p style={{ textAlign: 'center' }}>\n                    {!!searchResult.selectedEduLevel.length ? `${searchResult.selectedEduLevel} > ` : null}\n                    {!!searchResult.selectedSubject.length ? `${searchResult.selectedSubject} > ` : null}\n                    {!!searchResult.selectedCounty.length ? `${searchResult.selectedCounty} > ` : null}\n                    {!!searchResult.selectedKeyword.length ? `${searchResult.selectedKeyword} > ` : null}\n                                    共{filteredPlans.length}筆搜尋結果。\n                                </p> :\n                <p style={{ textAlign: 'center' }}>無關聯教案，請重新搜尋！</p>)}\n        </React.Fragment>\n    )\n\n\n    return (\n        <React.Fragment>\n            <div className=\"Search_Bar\">\n                <div className=\"Search_Bar_item\">\n                    <ul className=\"search-navtabs\">\n                        <li onClick={onEduButtonLevelClicked}><i className=\"icon-search-01\"></i><span>{eduLevelDisplay}</span></li>\n                        <li onClick={onSubButtonClicked}><i className=\"icon-search-02\"></i><span>{subjectDisplay}</span></li>\n                        <li onClick={onCountyButtonClicked}><i className=\"icon-search-03\"></i><span>{countyDisplay}</span></li>\n                    </ul>\n                    <div className=\"search-container\">\n                        <input type=\"text\" placeholder=\"請輸入..\" name=\"search\" value={search.selectedKeyword} onChange={(e) => updateSelectedKeyword(e.target.value)} />\n                        <button type=\"submit\" onClick={onSearchClick}>搜 尋</button>\n                    </div>\n                    <div className=\"search_datawrap\">\n                        <div className=\"search_info\" style={{ display: (showEduLevel || showSubjects || showCounties || showSearchResult) ? 'block' : 'none' }}>\n                            {showEduLevel ? eduButtons : null}\n                            {showSubjects ? subjectButtons : null}\n                            {showCounties ? countyButtons : null}\n                            {showSearchResult ? resultInfo : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment >\n    )\n}","import React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport KeyVisual from '../components/KeyVisual';\nimport Pagination from '../components/Pagination';\nimport Plans from '../components/Plans';\nimport SearchBar from '../components/SearchBar';\n\nexport default function MasterPage() {\n    return (\n        <React.Fragment>\n            <section className=\"wrapper\">\n                <Header />\n                <KeyVisual />\n                <section className=\"cw-main\">\n                    <SearchBar />\n                    <Plans />\n                    <Pagination />\n                </section>\n                <Footer />\n            </section>\n            <div className=\"topup\" onClick={() => { window.scrollTo(0, 0) }}></div>\n        </React.Fragment>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DetailHeader = () => {\n    return (\n        <React.Fragment>\n            <header className=\"casestudies\">\n                <Link to=\"/\">\n                    <div className=\"logo\">\n                        微笑台灣創意教案\n                    {/* <a href=\"index.html\">微笑台灣創意教案</a> */}\n                    </div>\n                </Link>\n            </header>\n        </React.Fragment>\n    );\n}\n\nexport default DetailHeader;","import React from 'react';\n\nconst DetailPlan = (props) => {\n    const { plan } = props;\n\n    return (\n        <React.Fragment>\n            <section className=\"cases-main m_10em\">\n                <div className=\"share-box\">\n                    <ul className=\"share-itme l_float\">\n                        <li className=\"bk\"><span className=\"share-01\"></span></li>\n                        <li> <span className=\"share-02\">facebook</span></li>\n                        <li> <span className=\"share-03\">line</span></li>\n                    </ul>\n                    <ul className=\"share-itme r_float\">\n                        <li><span className=\"share-04\">翰林出版</span></li>\n                        <li><span className=\"share-05\">天下雜誌</span></li>\n                    </ul>\n                </div>\n                <h3 className=\"clearfix\">{plan ? plan.name : null}</h3>\n                <div className=\"intro_box\">\n                    <ul className=\"w_40\">\n                        <li><span>適合階段：</span>{plan ? plan.grade : null}</li>\n                        <li><span> 年度：</span>{plan ? plan.year : null}</li>\n                        <li><span> 獎項：</span>{plan ? plan.awardName : null}</li>\n                        <li><span> 地區：</span>{plan ? plan.city : null}</li>\n                    </ul>\n                    <ul className=\"w_60\">\n                        <li><span>科目：</span>{plan ? plan.subject : null}</li>\n                        <li><span>教師：</span>{plan ? plan.teacher : null}</li>\n                        <li><span>學校：</span>{plan ? plan.school : null}</li>\n                    </ul>\n                </div>\n                <div className=\"video-shadow\">\n                    {/* <!-- <div className=\"iframe-img\"></div> --> */}\n                    <iframe\n                        width=\"1280\"\n                        height=\"717\"\n                        src={`https://www.youtube.com/embed/${plan ? plan.youtubeLink : null}`}\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                        title={plan ? plan.youtubeLink : null}\n                    ></iframe>\n                </div>\n                <div className=\"intro_text\" dangerouslySetInnerHTML={{ __html: plan ? plan.summary : null }}>\n                </div>\n            </section>\n        </React.Fragment >\n    );\n}\n\nexport default DetailPlan;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport DetailHeader from '../components/DetailHeader';\nimport DetailPlan from '../components/DetailPlan';\nimport Footer from '../components/Footer';\nimport { useSelector } from 'react-redux'\n\nexport default function DetailPage() {\n\n\n    const planLookupTable = useSelector(state => state.plans.planLookupTable)\n    const { planId } = useParams();\n    return (\n        <React.Fragment>\n            <section className=\"wrapper\">\n                <DetailHeader />\n                <DetailPlan\n                    plan={planLookupTable[planId]}\n                />\n                <Footer />\n            </section>\n            <div className=\"topup\" onClick={() => { window.scrollTo({ top: 0, behavior: 'smooth' }) }}></div>\n        </React.Fragment>\n    )\n}","import React, { useEffect } from 'react';\nimport './assets/css/reset.css';\nimport './assets/css/header.css';\nimport './assets/css/layout.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport MasterPage from './pages/MasterPage';\nimport DetailPage from './pages/DetailPage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPlans } from './reducers/plansSlice';\nimport { fetchCounties, fetchEdu, fetchSubjects } from './reducers/searchSlice';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const planStatus = useSelector(state => state.plans.status)\n  const eduStatus = useSelector(state => state.search.eduStatus)\n  const subjectsStatus = useSelector(state => state.search.subjectsStatus)\n  const countiesStatus = useSelector(state => state.search.countiesStatus)\n\n  useEffect(() => {\n    if (planStatus === 'idle') {\n      dispatch(fetchPlans())\n    }\n    if (eduStatus === 'idle') {\n      dispatch(fetchEdu())\n    }\n    if (subjectsStatus === 'idle') {\n      dispatch(fetchSubjects())\n    }\n    if (countiesStatus === 'idle') {\n      dispatch(fetchCounties())\n    }\n  }, [planStatus, eduStatus, subjectsStatus, countiesStatus, dispatch])\n\n  return (\n    <Router basename={\"/react-tutorial\"}>\n      <Switch>\n        <Route path=\"/\" exact>\n          <MasterPage />\n        </Route>\n        <Route path=\"/plan/:planId\">\n          <DetailPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport pagesReducer from './pagesSlice';\nimport plansReducer from './plansSlice';\nimport searchReducer from './searchSlice';\n\n\nexport default configureStore({\n    reducer: {\n        pages: pagesReducer,\n        plans: plansReducer,\n        search: searchReducer,\n    }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './reducers/index'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}